vars:
    - methods:
        - name: 4dvarnet
          var: rec_ssh
          url: https://s3.eu-west-2.wasabisys.com/oceanbench-data-registry/dvc/a5/2381e9409cb7c6cf9be980bda9aced
        - name: miost
          var: ssh
          url: https://s3.eu-west-2.wasabisys.com/oceanbench-data-registry/dvc/4f/014481eed0088eb9a0cf329ebf045b


stages:
    method_output:
        foreach: ${methods}
        do:
            cmd: wget ${item.url} -nc -O 'data/method_outputs/${item.name}.nc'
            outs: ['data/method_outputs/${item.name}.nc']
    fetch_reference_data:
        cmd: qf_alongtrack_lambdax_from_map -cd . -cn stage_configs 
             'to_run=[dl_tracks]'
        deps: ['data/downloads']
        outs: ['data/prepared']
    compute_lambdax:
        foreach: ${methods}
        do:
            cmd: qf_alongtrack_lambdax_from_map -cd . -cn stage_configs 
             'to_run=[interp_on_track, lambdax]'
             'stages.interp_on_track.grid_var=${item.var}' 
             'stages.method=${item.name}'
            deps:
                - data/prepared
                - 'data/method_outputs/${item.name}.nc'
            outs:
                - 'data/method_outputs/${item.name}_on_track.nc'
                - 'data/metrics/lambdax_${item.name}.nc'
                - 'data/metrics/psd_${item.name}.nc'
    aggregate_metrics:
            cmd: python -c 'from pathlib import Path;import xarray as xr;import pandas as pd;
                pd.Series({p.name:xr.open_dataset(p).lambdax.item()
                        for p in Path("data/metrics").glob("lambdax*.nc")
                    }).T.to_csv("data/leaderboard.csv")'
            deps: [data/metrics]
            outs: [data/leaderboard.csv]
