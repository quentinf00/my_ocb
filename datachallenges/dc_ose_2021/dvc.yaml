vars:
<<<<<<< Updated upstream
- datachallenge.toml:pipelines,methods
=======
- stage_configs.yaml:stages
- datachallenge.toml:pipelines,methods,satellites
>>>>>>> Stashed changes


stages:
  update_config:
    cmd: qf_alongtrack_metrics_from_map +overrides=dc_ose_2021/metrics --cfg job > stage_configs.yaml
    outs:
    - stage_configs.yaml
  method_output:
    foreach: ${methods}
    do:
      cmd: wget ${item.url} -nc -O 'data/method_outputs/${key}.nc'
      outs:
      - data/method_outputs/${key}.nc:
          cache: false
  fetch_reference_data:
    foreach: ${satellites}  # supposé être une liste de satellites
    do:
      params:
      - datachallenge.toml:
        - pipelines.diagnostic.qf_alongtrack_metrics_from_map
      - stage_configs.yaml:
        - stages.dl_tracks
      cmd: qf_alongtrack_metrics_from_map -cd . -cn stage_configs 'to_run=[dl_tracks]' dl_tracks.sat=${item}
      outs:
      - data/downloads/${item}:
          cache: false
  filter_and_merge_ref:
<<<<<<< Updated upstream
    params:
    - datachallenge.toml:
      - pipelines.diagnostic.qf_alongtrack_metrics_from_map
    - stage_configs.yaml:
      - stages.filter_and_merge
    cmd: qf_alongtrack_metrics_from_map -cd . -cn stage_configs 'to_run=[filter_and_merge]'
    deps:
    - data/downloads/c2
    outs:
    - data/prepared/c2.nc
=======
    foreach: ${satellites}  # supposé être une liste de satellites
    do:
      params:
      - datachallenge.toml:
        - pipelines.diagnostic.qf_alongtrack_metrics_from_map
      - stage_configs.yaml:
        - stages.filter_and_merge
      cmd: qf_alongtrack_metrics_from_map -cd . -cn stage_configs 'to_run=[filter_and_merge]' filter_and_merge.input_dir=data/prepared/${item}.nc
      outs:
      - data/prepared/${item}.nc
>>>>>>> Stashed changes
  interp_on_track:
    foreach: ${methods}
    do:
      cmd: qf_alongtrack_metrics_from_map -cd . -cn stage_configs 'to_run=[interp_on_track]'
        'stages.interp_on_track.grid_var=${item.var}' 'stages.method=${key}'
      params:
      - datachallenge.toml:
        - pipelines.diagnostic.qf_alongtrack_metrics_from_map
      - stage_configs.yaml:
        - stages.interp_on_track
      deps:
      - data/prepared/c2.nc
      - data/method_outputs/${key}.nc
      outs:
      - data/method_outputs/${key}_on_track.nc
  metric_lambdax:
    foreach: ${methods}
    do:
      cmd: qf_alongtrack_metrics_from_map -cd . -cn stage_configs 'to_run=[lambdax]'
        'stages.interp_on_track.grid_var=${item.var}' 'stages.method=${key}'
      params:
      - datachallenge.toml:
        - pipelines.diagnostic.qf_alongtrack_metrics_from_map
      - stage_configs.yaml:
        - stages.lambdax
      deps:
      - data/prepared/c2.nc
      - data/method_outputs/${key}_on_track.nc
      outs:
      - data/method_outputs/psd_${key}.nc
      metrics:
      - data/metrics/lambdax_${key}.json:
          cache: false
  metric_mu:
    foreach: ${methods}
    do:
      cmd: qf_alongtrack_metrics_from_map -cd . -cn stage_configs 'to_run=[mu]'
        'stages.interp_on_track.grid_var=${item.var}' 'stages.method=${key}'
      params:
      - datachallenge.toml:
        - pipelines.diagnostic.qf_alongtrack_metrics_from_map
      - stage_configs.yaml:
        - stages.mu
      deps:
      - data/prepared/c2.nc
      - data/method_outputs/${key}_on_track.nc
      metrics:
      - data/metrics/mu_${key}.json:
          cache: false
